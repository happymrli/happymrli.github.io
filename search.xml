<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MyBlog</title>
    <url>/2022/02/25/Myblog/</url>
    <content><![CDATA[<p><strong>求打赏文案</strong></p>
<span id="more"></span>

<p><strong>有金额数字版</strong></p>
<p>打赏2块钱，帮我买杯咖啡，继续创作，谢谢大家！<br> 爱，就供养；喜欢/受益，就打赏！2元请我喝咖啡。<br> 如果本文对你有所帮助，请打赏——1元就足够感动我：）<br> 打赏不能超过你的早餐钱<br> 打赏不准超过你工资的一半<br> 如果有用，请我吃3块好吃的<br> 支持不要超过早餐费~<br> 大爷，赏个铜板呗<br> 已众筹到98元，只差您的2元就可继续买笔和创作啦~~~<br> 我知道我能威胁的都是爱我的人，所以，爱我就给我5.20。<br> 您打赏的一小步，维安钱包提现的一大步( •̀ ω •́ )y</p>
<p><strong>无金额数字版</strong><br> 嗯，我的梦想是被读者的稿费包养~<br> 此处应有打赏<br> 最近打算存点私房钱，吃点高端的SHA VILLA沙县小吃这样的餐厅<br> 拿钱去买猫粮，楼下的流浪猫在等我(‘’)ﾉ<br> 请赏我点铜板买喵粮自己吃，谢谢！<br> 喜欢就点赞or赞赏。<br> 喜欢你就打赏一下<br> 爷儿您要是看的乐，打个赏也让姑娘乐一乐<br> 请简单粗暴地爱我。</p>
<p><strong>么么哒 卖萌版</strong><br> 点赞就好么么哒～～<br> 喜欢请点赞，么么哒。<br> 喜欢请点赞，么么哒。<br> 喜欢我的文章，成为我的天使投资人吧，么么哒<br> 最喜欢你一言不合就打赏的样子了~~~么么！<br> 么么哒，夏天来块儿冰西瓜！<br> 我不管，我要吃棒棒糖~<br> 感谢认可，么么哒。</p>
<p><strong>不求打赏版</strong><br> 不需要打赏哦，喜欢我的文章就关注、点喜欢，欢迎分享到朋友圈，谢谢<br> 点喜欢就是最好的打赏！！<br> 打赏是支持，也可以移步公众号。<br> 分享是对我最大的赞赏 随缘随心<br> 你的点赞就是最大的帮助了。<br> 你若喜欢，不妨关注我的微信公众号“尹沽城”，真诚脸<br> 亲爱的读者朋友，如果觉得我写得不错，请点一个“喜欢”~<br> 求点赞求点关注心意到了就好谢谢你们~<br> 喜欢就关注我吧。(≧≦)/</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>测试开发</tag>
      </tags>
  </entry>
  <entry>
    <title>☁云端图库</title>
    <url>/2022/03/06/%E4%BA%91%E7%AB%AF%E5%9B%BE%E5%BA%93/</url>
    <content><![CDATA[<p><img src="/2022/03/06/%E4%BA%91%E7%AB%AF%E5%9B%BE%E5%BA%93/%E5%9B%BE%E7%89%872.png"></p>
<p><img src="/2022/03/06/%E4%BA%91%E7%AB%AF%E5%9B%BE%E5%BA%93/%E5%9B%BE%E7%89%873.png"></p>
<span id="more"></span>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>测试开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Test</title>
    <url>/2022/02/26/Test/</url>
    <content><![CDATA[<p><strong>上传测试</strong></p>
<span id="more"></span>

<h2 id="图片："><a href="#图片：" class="headerlink" title="图片："></a><strong>图片：</strong></h2><p><img src="/2022/02/26/Test/2WW%5DB7$@@5W@2NGI%602M5$EQ.png"></p>
<p>来源：截图–&gt;另存为</p>
<p><img src="/2022/02/26/Test/QQ%E5%9B%BE%E7%89%8720220226230703.jpg"></p>
<p><img src="/2022/02/26/Test/QQ%E5%9B%BE%E7%89%8720220226230906.jpg"></p>
<p>来源：转发的图片–&gt;另存为</p>
<p><strong>结论：只要是正常另存为到同名文件夹中即可，不可偷懒复制粘贴。</strong></p>
<h2 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H__</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<h2 id="表情："><a href="#表情：" class="headerlink" title="表情："></a>表情：</h2><p>❤🚗🍕🎈👩😀🧨</p>
<h2 id="特殊符号："><a href="#特殊符号：" class="headerlink" title="特殊符号："></a>特殊符号：</h2><p>ヾ(≧▽≦*)o</p>
<p>℃¥£①④⑦№™@【〗〈≈＝≌←↓↖ㄅㄈㄋ</p>
<h2 id="引用："><a href="#引用：" class="headerlink" title="引用："></a>引用：</h2><blockquote>
<p>此处为引用</p>
</blockquote>
<h2 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h2><ol>
<li>一</li>
<li>二</li>
<li>三</li>
</ol>
<h2 id="任务列表："><a href="#任务列表：" class="headerlink" title="任务列表："></a>任务列表：</h2><ul>
<li><input checked disabled type="checkbox"> </li>
</ul>
<h2 id="分割线："><a href="#分割线：" class="headerlink" title="分割线："></a>分割线：</h2><hr>
<h2 id="文本格式："><a href="#文本格式：" class="headerlink" title="文本格式："></a>文本格式：</h2><p><em>本项目亮点：前行或倒退时，前方车灯频闪；</em>    斜体</p>
<p><u>遇到障碍物左转或右转时，对应左方或右方发光二极管频闪。</u>   下划线</p>
<p><del>本项目改进点：因为main函数中Go函数的传参问题，导致传感器识别不灵敏，</del>   删除线</p>
<p>若不传参，即Go只执行前进操作，那样的话感应就会很灵敏。读者可以尝试修改优化。</p>
<p>这是^上标^  </p>
<p>这是<del>下标</del></p>
<!--注释-->

<h2 id="超链接："><a href="#超链接：" class="headerlink" title="超链接："></a>超链接：</h2><p><a href="https://www.bilibili.com/video/BV1WU4y1g72q?share_source=copy_web">Bilibili</a></p>
<h2 id="链接引用："><a href="#链接引用：" class="headerlink" title="链接引用："></a>链接引用：</h2><p>脚注<a href="%E8%84%9A%E6%B3%A8%E8%A7%A3%E9%87%8A">^ 1 </a></p>
<h2 id="公式："><a href="#公式：" class="headerlink" title="公式："></a>公式：</h2><p>$$\delta \frown \Rsh \sin {x}$$</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>测试开发</tag>
      </tags>
  </entry>
  <entry>
    <title>人生的关键词🎨</title>
    <url>/2022/03/09/%E4%BA%BA%E7%94%9F%E7%9A%84%E5%85%B3%E9%94%AE%E8%AF%8D/</url>
    <content><![CDATA[<table><tr><td bgcolor="PowderBlue">人生的不同阶段，会身处不同的境遇，而总有一些关键词能够帮你度过那段岁月。</td></tr></table>



<p><strong>下面的这些关键词，分别陪伴我度过了人生的一段又一段，对别人而言，他们可能是毫无逻辑的词组，但对自己来说，确是极其有<code>力量</code>和<code>意义</code>的。</strong></p>
<blockquote>
<p><strong>自信!</strong></p>
<p><strong>去享受生活吧!</strong><br><strong>向前看!</strong></p>
<p><strong>√.奔赴·笨</strong><br><strong>吃 喝 睡眠 锻炼 休憩.BODY·FIRST</strong></p>
<p><strong>遇人.终老.</strong><br><strong>有血有肉.</strong></p>
<p><strong>Enrich Enjoy 小日子</strong><br><strong>二十  !🐺  顶峰相见</strong>  </p>
<p><strong>尽头 Better! 奔赴</strong></p>
</blockquote>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
      <tags>
        <tag>人生感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>来啦！🥳</title>
    <url>/2022/02/27/%E5%85%AC%E5%91%8A/</url>
    <content><![CDATA[<p>Congratulations！🎉🎉🎉</p>
<p>📣：我的小破站于今日正式上线啦！欢迎来踩！</p>
<p>本人是一名某211大学在读本科生，大二，专业电子信息工程。📡</p>
<p>专业主攻硬件，但是对软件略有兴趣，于是学期初趁着闲暇时间尝试搭建个人博客。</p>
<p>博客基于Hexo框架搭建，选用Next主题，并在此基础上进行了一定的魔改，最终呈现给大家。</p>
<p>有很多不足之处，搭建过程的心态也多“玩儿儿”，更多是一个学习摸索的过程，欢迎批评指正。🥳</p>
<p>同时也欢迎到我的其他社交帐户来踩，现实生活中，我可是有趣的灵魂呐！嘿嘿！欢迎点击左侧链接！✨✨✨</p>
<span id="more"></span>

<p><img src="/2022/02/27/%E5%85%AC%E5%91%8A/QQ%E5%9B%BE%E7%89%8720220227102323.png"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>关于·我的域名😎</title>
    <url>/2022/03/08/%E5%85%B3%E4%BA%8E%C2%B7%E6%88%91%E7%9A%84%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<h1 id="🚗缘起"><a href="#🚗缘起" class="headerlink" title="🚗缘起"></a>🚗缘起</h1><p>从<code>2022/2/25</code>开始折腾，目前已经部署了自己的个人Blog，同时还搭建了一个知识库文档网页。</p>
<blockquote>
<p>Blog: <a href="https://happymrli.github.io/">Redamancy785’s Blog</a></p>
<p>文档网页: <a href="https://mrli123456789.github.io/">野生钢铁侠の知识库</a></p>
</blockquote>
<p>其实在一开始，就只是抱着<code>玩玩儿</code>的心态，专业主硬件的我，搭建网页多半是来自对软件技术的<code>好奇</code>。然而在部署的过程中，遇到了很多障碍，在查阅资料的时候，我发现很多疑难问题的解决方案都可以在别人的技术博客当中找到，这使我对博客的看法发生了很大的转变。</p>
<blockquote>
<p>书写博客，既是对自己所学知识的总结，同时也是一种对后辈的指点。指不定在某个时刻某个人看到你的某篇文章，你的只言片语或许就为他指点迷津。</p>
</blockquote>
<p>于是我便疯狂查阅资料让自己信服写博客是<code>百利而无一害</code>的，最终CodeSheep的一席话说服了我。</p>
<iframe src="//player.bilibili.com/player.html?aid=56930990&bvid=BV1Px411d74c&cid=99437743&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p>于是我重新拾起了我的Blog和文档网页，开启我的<code>&quot;写作生涯&quot;</code>。</p>
<h1 id="🎲徘徊"><a href="#🎲徘徊" class="headerlink" title="🎲徘徊"></a>🎲徘徊</h1><p><code>怎么用、写什么</code>，一直找寻不到答案。直到我开始留意这两个网站的域名：</p>
<blockquote>
<p>Redamancy785’s Blog：<a href="https://happymrli.github.io/">https://happymrli.github.io/</a></p>
<p>野生钢铁侠の知识库：<a href="https://mrli123456789.github.io/">https://MrLi123456789.github.io/</a></p>
</blockquote>
<p>仔细观察，发现是<code>io域名</code>。</p>
<blockquote>
<p><code>io域名</code>的含义被很多人理解为<code>“输入输出”</code>，而在互联网技术中，就有<code>”输入“与”输出“</code>这两个词，因此<code>io域名</code>也受到很多互联网科技公司的喜欢，很多的互联网行业公司，都纷纷注册<code>io域名</code>作为项目的网站域名入口。</p>
</blockquote>
<p>将这两者结合在一起，奇妙发生了！</p>
<h1 id="🎯定位"><a href="#🎯定位" class="headerlink" title="🎯定位"></a>🎯定位</h1><h2 id="知识库的定位是i，是输入"><a href="#知识库的定位是i，是输入" class="headerlink" title="知识库的定位是i，是输入"></a><strong><code>知识库</code>的定位是<code>i</code>，是<code>输入</code></strong></h2><p><em>我想制作这样一个知识库网站：在这里，我会为每一个跟我一样，想成为野生钢铁侠，但不知从何下手的的大学生，提供技能树中每一项技能的详细学习的路线。如果这个网站能够给一些志同道合的人一点的帮助，就一切都值得了。</em></p>
<h2 id="Blog的定位是o，是输出"><a href="#Blog的定位是o，是输出" class="headerlink" title="Blog的定位是o，是输出"></a><strong><code>Blog</code>的定位是<code>o</code>，是<code>输出</code></strong></h2><p><em>而Blog网站，是学习的阶段性输出。每一篇博客，都可以加深对技术进一步的理解，这就是存在的意义。</em></p>
<p><strong>最后，送诸位一席话：</strong></p>
<table><tr><td bgcolor="PowderBlue">"对任何渴望进步的人来说，写博客/文章/回答对自己的成长帮助都是巨大的。频率和数量不必过分强求，有话要说就写写，没事就歇歇，随意点。因为坚持写作的那一刻起，你就已经开始受益。"</td></tr></table>

]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>🚗造轮子—Flash&amp;SRAM优化</title>
    <url>/2022/03/09/%E9%80%A0%E8%BD%AE%E5%AD%90%E2%80%94Flash%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<table><tr><td bgcolor="PowderBlue">🚩优化FLASH内存很有效的方式之一：删除无用代码</td></tr></table>

<p>首先来看一组Arduino<code>内存占用情况</code>的对比：</p>
<blockquote>
<p><strong>优化之前</strong></p>
</blockquote>
<p><img src="/2022/03/09/%E9%80%A0%E8%BD%AE%E5%AD%90%E2%80%94Flash%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81/20220309173033.png"></p>
<blockquote>
<p><strong>优化之后</strong></p>
</blockquote>
<p><img src="/2022/03/09/%E9%80%A0%E8%BD%AE%E5%AD%90%E2%80%94Flash%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81/20220309173006.png"></p>
<p><strong>明显发生了很大的改变，而实现的功能却是一模一样的。</strong></p>
<span id="more"></span>

<blockquote>
<p>本次程序例程来自<a href="http://www.taichi-maker.com/">太极创客官网</a>，此平台的Arduino教程深入浅出，对于想学习Arduino的同学，首推太极创客团队。(๑•̀ㅂ•́)و✧</p>
</blockquote>
<p>以下便是今天练习的<code>内存优化</code>程序：</p>
<blockquote>
<p>🎯优化前代码</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 基本功能介绍：</span></span><br><span class="line"><span class="comment"> * 小夜灯配备人体红外感应传感器以及光敏电阻实现照明自动化</span></span><br><span class="line"><span class="comment"> * 点亮和熄灭时产生渐明渐暗效果</span></span><br><span class="line"><span class="comment"> * 在点亮过程中产生呼吸灯的效果</span></span><br><span class="line"><span class="comment"> * 用户可以通过变量 maxRVal、maxGVal、maxBVal 自定义小夜灯点亮的颜色</span></span><br><span class="line"><span class="comment"> * 用户可以通过变量 breathStep、breathStepDelay 自定义小夜灯渐明渐暗的速度</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 基本电路连接说明：</span></span><br><span class="line"><span class="comment"> * 共阴极RGB-LED引脚R 连接 Arduino控制器引脚6</span></span><br><span class="line"><span class="comment"> * 共阴极RGB-LED引脚G 连接 Arduino控制器引脚5</span></span><br><span class="line"><span class="comment"> * 共阴极RGB-LED引脚B 连接 Arduino控制器引脚3</span></span><br><span class="line"><span class="comment"> * 红外人体感应模块信号输出引脚 连接 Arduino控制器引脚8</span></span><br><span class="line"><span class="comment"> * 光敏电阻分压电路信号输出引脚 连接 Arduino控制器引脚A0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//定义引脚</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rLedPin 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> gLedPin 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bLedPin 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> irSensorPin 8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> lightSensorPin A0</span></span><br><span class="line"><span class="comment">//设置参数</span></span><br><span class="line"><span class="type">int</span> ledR=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ledG=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ledB=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> irReading;</span><br><span class="line"><span class="type">int</span> lightReading;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> maxRVal=<span class="number">125</span>;</span><br><span class="line"><span class="type">int</span> maxGVal=<span class="number">200</span>;</span><br><span class="line"><span class="type">int</span> maxBVal=<span class="number">33</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> minRVal=<span class="number">39</span>;</span><br><span class="line"><span class="type">int</span> minGVal=<span class="number">65</span>;</span><br><span class="line"><span class="type">int</span> minBVal=<span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> breathStep=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> breathStepDelay=<span class="number">18</span>;</span><br><span class="line"><span class="type">bool</span> breathOnOff=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> onOffState;</span><br><span class="line"></span><br><span class="line"><span class="comment">//debug模式是否开启</span></span><br><span class="line"><span class="comment">//bool debugOn=0;</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Arduino在控制LED亮度变化时，对于时间的要求很苛刻。</span></span><br><span class="line"><span class="comment"> * 每一次Arduino通过串口监视器输出信息时都会让Arduino短暂停顿</span></span><br><span class="line"><span class="comment"> * 这些短暂停顿会影响小夜灯的渐明渐暗效果。</span></span><br><span class="line"><span class="comment"> * 因此建议在程序开发时令debugOn = 1，以便于观察Arduino</span></span><br><span class="line"><span class="comment"> * 的工作状态并作出必要的修改。</span></span><br><span class="line"><span class="comment"> * 但是在正常工作时，建议将debugOn = 0, 从而确保Arduino</span></span><br><span class="line"><span class="comment"> * 的最佳工作效果。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *if(debugOn)&#123;</span></span><br><span class="line"><span class="comment"> *    Serial.println(&quot;&quot;);</span></span><br><span class="line"><span class="comment"> *    Serial.println(&quot;===========================&quot;);</span></span><br><span class="line"><span class="comment"> *    Serial.print(&quot;irReading = &quot;); Serial.println(irReading);</span></span><br><span class="line"><span class="comment"> *    Serial.print(&quot;lightReading = &quot;); Serial.println(lightReading);</span></span><br><span class="line"><span class="comment"> *    Serial.println(&quot;===========================&quot;);</span></span><br><span class="line"><span class="comment"> *    delay(50);</span></span><br><span class="line"><span class="comment"> *&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//引脚模式的设置</span></span><br><span class="line">    <span class="built_in">pinMode</span>(rLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(gLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(bLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(irSensorPin,INPUT);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(debugOn)&#123;</span><br><span class="line">        Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;Welcome!&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(minRVal&gt;maxRVal || minGVal&gt;maxGVal || minBVal&gt;maxBVal)&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;<span class="comment">//持续闪烁红灯以示警告</span></span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,<span class="number">255</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,<span class="number">0</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Bad LED Settings!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">	irReading=<span class="built_in">digitalRead</span>(irSensorPin);</span><br><span class="line">    lightReading=<span class="built_in">digitalRead</span>(lightSensorPin);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(irReading==HIGH&amp;&amp;lightReading&gt;=<span class="number">880</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(onOffState==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">fadeUp</span>(maxRVal,maxGVal,maxBVal);</span><br><span class="line">        onOffState=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(breatheOnOff==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">ledBreathe</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(onOffState==<span class="number">1</span>);</span><br><span class="line">        	<span class="built_in">fadeDown</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        onOffState=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fadeUp</span><span class="params">(<span class="type">int</span> maxRVal,<span class="type">int</span> maxGVal,<span class="type">int</span> maxBVal)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(ledR&lt;maxRVal||ledG&lt;maxGVal||ledB&lt;maxBVal)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ledR+breatheStep&lt;maxRVal)&#123;</span><br><span class="line">            ledR+=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledR=maxRVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledG+breatheStep&lt;maxGVal)&#123;</span><br><span class="line">            ledG+=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledG=maxGVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledB+breatheStep&lt;maxBVal)&#123;</span><br><span class="line">            ledB+=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledB=maxBVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">delay</span>(breatheStepDelay);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fadeDown</span><span class="params">(<span class="type">int</span> minRVal,<span class="type">int</span> minGVal,<span class="type">int</span> minBVal)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(ledR&gt;minRVal||ledG&gt;minGVal||ledB&gt;minBVal)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ledR-breatheStep&gt;minRVal)&#123;</span><br><span class="line">            ledR-=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledR=minRVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledG-breatheStep&gt;minGVal)&#123;</span><br><span class="line">            ledG-=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledG=minGVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledB-breatheStep&gt;minBVal)&#123;</span><br><span class="line">            ledB-=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledB=minBVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">delay</span>(breatheStepDelay);  </span><br><span class="line">    &#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ledBreathe</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">fadeDown</span>(minRVal,minGVal,minBVal);</span><br><span class="line">    <span class="built_in">fadeUp</span>(maxRVal,maxGVal,maxBVal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>🎯优化后代码</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rLedPin 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> gLedPin 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bLedPin 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> irSensorPin 8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> lightSensorPin A0</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ledR=<span class="number">0</span>;  <span class="comment">//byte ledR=0;</span></span><br><span class="line"><span class="type">int</span> ledG=<span class="number">0</span>;  <span class="comment">//byte ledG=0;</span></span><br><span class="line"><span class="type">int</span> ledB=<span class="number">0</span>;  <span class="comment">//byte ledB=0;</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> irReading;</span><br><span class="line"><span class="type">int</span> lightReading;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> maxRVal=<span class="number">125</span>; <span class="comment">//const int PROGMEM maxRVal=125;</span></span><br><span class="line"><span class="type">int</span> maxGVal=<span class="number">200</span>; <span class="comment">//</span></span><br><span class="line"><span class="type">int</span> maxBVal=<span class="number">33</span>;  <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> minRVal=<span class="number">39</span>;  <span class="comment">//</span></span><br><span class="line"><span class="type">int</span> minGVal=<span class="number">65</span>;  <span class="comment">//</span></span><br><span class="line"><span class="type">int</span> minBVal=<span class="number">11</span>;  <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> breathStep=<span class="number">1</span>;      <span class="comment">//  </span></span><br><span class="line"><span class="type">int</span> breathStepDelay=<span class="number">18</span>;<span class="comment">//</span></span><br><span class="line"><span class="type">bool</span> breathOnOff=<span class="number">0</span>;    <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> onOffState; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//引脚模式的设置</span></span><br><span class="line">    <span class="built_in">pinMode</span>(rLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(gLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(bLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(irSensorPin,INPUT);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(debugOn)&#123;</span><br><span class="line">        Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="built_in">F</span>(<span class="string">&quot;Welcome!&quot;</span>)); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(minRVal&gt;maxRVal || minGVal&gt;maxGVal || minBVal&gt;maxBVal)&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,<span class="number">255</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,<span class="number">0</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="built_in">F</span>(<span class="string">&quot;Bad LED Settings!&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">	irReading=<span class="built_in">digitalRead</span>(irSensorPin);</span><br><span class="line">    lightReading=<span class="built_in">digitalRead</span>(lightSensorPin);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(irReading==HIGH&amp;&amp;lightReading&gt;=<span class="number">880</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(onOffState==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">fadeUp</span>(maxRVal,maxGVal,maxBVal);</span><br><span class="line">        onOffState=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(breatheOnOff==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">ledBreathe</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(onOffState==<span class="number">1</span>);</span><br><span class="line">        	<span class="built_in">fadeDown</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        onOffState=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fadeUp</span><span class="params">(<span class="type">int</span> maxRVal,<span class="type">int</span> maxGVal,<span class="type">int</span> maxBVal)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(ledR&lt;maxRVal||ledG&lt;maxGVal||ledB&lt;maxBVal)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ledR+breatheStep&lt;maxRVal)&#123;</span><br><span class="line">            ledR+=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledR=maxRVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledG+breatheStep&lt;maxGVal)&#123;</span><br><span class="line">            ledG+=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledG=maxGVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledB+breatheStep&lt;maxBVal)&#123;</span><br><span class="line">            ledB+=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledB=maxBVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">delay</span>(breatheStepDelay);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fadeDown</span><span class="params">(<span class="type">int</span> minRVal,<span class="type">int</span> minGVal,<span class="type">int</span> minBVal)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(ledR&gt;minRVal||ledG&gt;minGVal||ledB&gt;minBVal)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ledR-breatheStep&gt;minRVal)&#123;</span><br><span class="line">            ledR-=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledR=minRVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledG-breatheStep&gt;minGVal)&#123;</span><br><span class="line">            ledG-=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledG=minGVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ledB-breatheStep&gt;minBVal)&#123;</span><br><span class="line">            ledB-=breatheStep;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ledB=minBVal;</span><br><span class="line">            <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">delay</span>(breatheStepDelay);  </span><br><span class="line">    &#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ledBreathe</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">fadeDown</span>(minRVal,minGVal,minBVal);</span><br><span class="line">    <span class="built_in">fadeUp</span>(maxRVal,maxGVal,maxBVal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>✔优化代码技巧：</p>
<ul>
<li>串口监视器输出:Serial.println(“……”);[SRAM]  →   <strong>Serial.println(F(“……”));[Flash]</strong></li>
<li>常量：const int a = 125;[SRAM]  →  <strong>const int PROGMEM a = 125;[Flash]</strong></li>
<li>变量（尽量使用局部变量代替全局变量）：全局变量[独享SRAM]   →   <strong>局部变量[共享SRAM]</strong></li>
<li>数据类型：int [2字节]  →    <strong>bool/byte[1字节]</strong></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>🚗造轮子—MeArm</title>
    <url>/2022/03/03/%E9%80%A0%E8%BD%AE%E5%AD%90%E2%80%94MeArm/</url>
    <content><![CDATA[<p>最近，开始接触<code>Arduino</code>平台，我认为<code>造轮子</code>的是提高代码能力的最有效的方式。</p>
<blockquote>
<p>造轮子：简明来说就是重新实现已有的功能，以达到更高效、更稳定等的目的</p>
</blockquote>
<p>以下程序例程来自<a href="http://www.taichi-maker.com/">太极创客官网</a>，此平台的Arduino教程深入浅出，对于想学习Arduino的同学，首推太极创客团队。</p>
<span id="more"></span>

<p>以下便是今天练习的造轮子程序：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Joy——MeArm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">MeArm机械臂控制程序</span></span><br><span class="line"><span class="comment">机械臂的控制有两种模式，分别为：</span></span><br><span class="line"><span class="comment">指令模式；在串口中输入格式为“ b90 ”的数据，控制“ base ”舵机运转到“ 90° ”位置；</span></span><br><span class="line"><span class="comment">按键模式：在串口中输入wsad/8456,控制机械臂的自由运动。</span></span><br><span class="line"><span class="comment">两种模式可以通过&#x27;m&#x27;字符切换。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Servo.h&gt;</span>            <span class="comment">//导入Servo库</span></span></span><br><span class="line">Servo base, rArm, fArm, claw; <span class="comment">//创建四个Servo对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//存储电机极限值——使用const关键字</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> baseMIn = <span class="number">0</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> baseMax = <span class="number">180</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> rArmMIn = <span class="number">45</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> rArmMax = <span class="number">180</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> fArmMIn = <span class="number">3</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> fArmMax = <span class="number">120</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> clawMIn = <span class="number">25</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> clawMax = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> DSD = <span class="number">15</span>;     <span class="comment">//DSD——Default Servo Delay</span></span><br><span class="line"><span class="type">bool</span> mode = <span class="literal">true</span>; <span class="comment">//mode=1 指令模式  mode=0 按键模式</span></span><br><span class="line"><span class="type">int</span> moveStep = <span class="number">3</span>; <span class="comment">//每一次按下按键 舵机的移动量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;       <span class="comment">//初始化内容包括：伺服电机连接PWM、伺服电机初始化、串口初始化</span></span><br><span class="line">    base.<span class="built_in">attach</span>(<span class="number">11</span>); <span class="comment">//base 伺服舵机连接引脚11 舵机代号&#x27;b&#x27;</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">200</span>);      <span class="comment">//稳定性等待</span></span><br><span class="line">    rArm.<span class="built_in">attach</span>(<span class="number">10</span>); <span class="comment">//rArm 伺服舵机连接引脚10 舵机代号&#x27;r&#x27;</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">200</span>);      <span class="comment">//稳定性等待</span></span><br><span class="line">    fArm.<span class="built_in">attach</span>(<span class="number">9</span>);  <span class="comment">//fArm 伺服舵机连接引脚9 舵机代号&#x27;f&#x27;</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">200</span>);      <span class="comment">//稳定性等待</span></span><br><span class="line">    claw.<span class="built_in">attach</span>(<span class="number">6</span>);  <span class="comment">//claw 伺服舵机连接引脚6 舵机代号&#x27;c&#x27;</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">200</span>);      <span class="comment">//稳定性等待  </span></span><br><span class="line">    </span><br><span class="line">    base.<span class="built_in">write</span>(<span class="number">90</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    rArm.<span class="built_in">write</span>(<span class="number">90</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    fArm.<span class="built_in">write</span>(<span class="number">90</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    claw.<span class="built_in">write</span>(<span class="number">90</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;Ths is MeArm!&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;                   <span class="comment">//反复读取串口数据</span></span><br><span class="line">    <span class="keyword">if</span> (Serial.<span class="built_in">available</span>()&gt;<span class="number">0</span>) &#123; <span class="comment">//如果串口有数据输入</span></span><br><span class="line">        <span class="type">char</span> serialCmd = Serial.<span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span> (mode) &#123;</span><br><span class="line">            <span class="built_in">armDataCmd</span>(serialCmd);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">armJoyCmd</span>(serialCmd);      </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//五个子函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">armDataCmd</span><span class="params">(<span class="type">char</span> seerialCmd)</span> </span>&#123; <span class="comment">//指令模式</span></span><br><span class="line">    <span class="keyword">if</span>(serialCmd == <span class="string">&#x27;w&#x27;</span> || serialCmd == <span class="string">&#x27;s&#x27;</span> || serialCmd == <span class="string">&#x27;a&#x27;</span> || </span><br><span class="line">      serialCmd == <span class="string">&#x27;d&#x27;</span> || serialCmd == <span class="string">&#x27;8&#x27;</span> || serialCmd == <span class="string">&#x27;5&#x27;</span> || </span><br><span class="line">      serialCmd == <span class="string">&#x27;4&#x27;</span> || serialCmd == <span class="string">&#x27;6&#x27;</span>)&#123;</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;+Warning: Robot in Instruction Mode...&quot;</span>);</span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">while</span>(Serial.<span class="built_in">available</span>()&gt;<span class="number">0</span>) <span class="type">char</span> wrongCommand = Serial.<span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(serialCmd == <span class="string">&#x27;b&#x27;</span> || serialCmd == <span class="string">&#x27;r&#x27;</span> || serialCmd == <span class="string">&#x27;f&#x27;</span> || </span><br><span class="line">      serialCmd == <span class="string">&#x27;c&#x27;</span>) &#123;</span><br><span class="line">        <span class="type">int</span> servoData = Serial.<span class="built_in">parseInt</span>();</span><br><span class="line">        <span class="built_in">servoCmd</span>(servoCmd, servoData, DSD);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (serialCmd)&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span> :   <span class="comment">//切换至手柄模式 </span></span><br><span class="line">      			mode = <span class="number">0</span>; </span><br><span class="line">        		Serial.<span class="built_in">println</span>(<span class="string">&quot;Command: Switch to Joy Mode.&quot;</span>);</span><br><span class="line">       		    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">                <span class="built_in">reportStatus</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;i:</span></span><br><span class="line"><span class="string">                armIniPos();</span></span><br><span class="line"><span class="string">                break;                </span></span><br><span class="line"><span class="string">            default:</span></span><br><span class="line"><span class="string">                Serial.println(&quot;Unknown Command.&quot;);     </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void armJoyCmd(char serialCmd) &#123; // 按键模式</span></span><br><span class="line"><span class="string">    if(serialCmd == &#x27;</span>b<span class="number">&#x27;</span> || serialCmd == <span class="string">&#x27;r&#x27;</span> ||</span><br><span class="line">       serialCmd == <span class="string">&#x27;f&#x27;</span> || serialCmd == <span class="string">&#x27;c&#x27;</span> )&#123;</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;+Warning: Robot in Joy Mode...&quot;</span>);</span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">while</span>(Serial.<span class="built_in">available</span>()&gt;<span class="number">0</span>) <span class="type">char</span> wrongCommand = Serial.<span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> baseJoyPos;</span><br><span class="line">    <span class="type">int</span> rArmJoyPos;</span><br><span class="line">    <span class="type">int</span> fArmJoyPos;</span><br><span class="line">    <span class="type">int</span> clawJoyPos;</span><br><span class="line">    <span class="keyword">switch</span>(serialCmd)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = base.<span class="built_in">read</span>() - moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(<span class="string">&#x27;b&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = base.<span class="built_in">read</span>() + moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(<span class="string">&#x27;b&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;            </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = rArm.<span class="built_in">read</span>() + moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(<span class="string">&#x27;r&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = rArm.<span class="built_in">read</span>() - moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(<span class="string">&#x27;r&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;            </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = claw.<span class="built_in">read</span>() - moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(<span class="string">&#x27;c&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = claw.<span class="built_in">read</span>() + moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(<span class="string">&#x27;c&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;            </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = fArm.<span class="built_in">read</span>() + moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(<span class="string">&#x27;f&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            Serial.<span class="built_in">println</span>(<span class="string">&quot;Receive Command : Base turn Left&quot;</span>);</span><br><span class="line">            baseJoyPos = fArm.<span class="built_in">read</span>() - moveStep;</span><br><span class="line">            <span class="built_in">servoCmd</span>(fr<span class="number">&#x27;</span>, baseJoyPos, DSD);</span><br><span class="line">            <span class="keyword">break</span>;            </span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span> :   <span class="comment">//切换至指令模式 </span></span><br><span class="line">      		mode = <span class="number">0</span>; </span><br><span class="line">        	Serial.<span class="built_in">println</span>(<span class="string">&quot;Command: Switch to Instruction Mode.&quot;</span>);</span><br><span class="line">       		<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">            <span class="built_in">reportStatus</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;i:</span></span><br><span class="line"><span class="string">            armIniPos();</span></span><br><span class="line"><span class="string">            break;                </span></span><br><span class="line"><span class="string">        default:</span></span><br><span class="line"><span class="string">            Serial.println(&quot;Unknown Command.&quot;);            </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void servoCmd(char servoName, int toPos, int servoDelay) &#123; //???</span></span><br><span class="line"><span class="string">    Servo servo2go;</span></span><br><span class="line"><span class="string">    //串口监视器输出接受指令信息</span></span><br><span class="line"><span class="string">    Serial.println(&quot;&quot;);</span></span><br><span class="line"><span class="string">    Serial.print(&quot;+Command: Servo &quot;);    </span></span><br><span class="line"><span class="string">    Serial.print(servoName);</span></span><br><span class="line"><span class="string">    Serial.print(&quot; to &quot;);</span></span><br><span class="line"><span class="string">    Serial.print(toPos);</span></span><br><span class="line"><span class="string">    Serial.print(&quot; at servoDelay value &quot;);</span></span><br><span class="line"><span class="string">    Serial.print(servoDelay);</span></span><br><span class="line"><span class="string">    Serial.println(&quot;.&quot;);</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    int fromPos;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    switch (servoName) &#123;</span></span><br><span class="line"><span class="string">        case &#x27;</span>b<span class="number">&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span>(toPos &gt;= baseMin &amp;&amp; toPos &lt;= baseMax) &#123;</span><br><span class="line">                servo2fo = base;</span><br><span class="line">                fromPos = base.<span class="built_in">read</span>(); <span class="comment">//获取当前电机角度值</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Serial.<span class="built_in">println</span>(<span class="string">&quot;+Warning: base Servo Value Out Of Limit!&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>; </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;r&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span>(toPos &gt;= rArmMin &amp;&amp; toPos &lt;= rArmMax) &#123;</span><br><span class="line">                servo2fo = rArm;</span><br><span class="line">                fromPos = rArm.<span class="built_in">read</span>(); <span class="comment">//获取当前电机角度值</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Serial.<span class="built_in">println</span>(<span class="string">&quot;+Warning: rArm Servo Value Out Of Limit!&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span>(toPos &gt;= fArmMin &amp;&amp; toPos &lt;= fArmMax) &#123;</span><br><span class="line">                servo2fo = fArm;</span><br><span class="line">                fromPos = fArm.<span class="built_in">read</span>(); <span class="comment">//获取当前电机角度值</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Serial.<span class="built_in">println</span>(<span class="string">&quot;+Warning: fArm Servo Value Out Of Limit!&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(toPos &gt;= clawMin &amp;&amp; toPos &lt;= clawMax) &#123;</span><br><span class="line">                servo2fo = claw;</span><br><span class="line">                fromPos = claw.<span class="built_in">read</span>(); <span class="comment">//获取当前电机角度值</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Serial.<span class="built_in">println</span>(<span class="string">&quot;+Warning: claw Servo Value Out Of Limit!&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;                                </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">	</span><br><span class="line">	<span class="comment">//指挥电机运行</span></span><br><span class="line">    <span class="keyword">if</span>(fromPos &lt;= toPos) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=fromPos; i&lt;=toPos; i++) &#123;</span><br><span class="line">       		servo2go.<span class="built_in">write</span>(i);  </span><br><span class="line">            <span class="built_in">delay</span>(servoDelay);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=fromPos; i&gt;=toPos; i--) &#123;</span><br><span class="line">       		servo2go.<span class="built_in">write</span>(i);  </span><br><span class="line">            <span class="built_in">delay</span>(servoDelay);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reportStatus</span><span class="params">()</span> </span>&#123; <span class="comment">//显示当前状态</span></span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;+ MeArm Status Report +&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;Base Position: &quot;</span>); Serial.<span class="built_in">println</span>(base.<span class="built_in">read</span>());</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;Rear Arm Position: &quot;</span>); Serial.<span class="built_in">println</span>(rArm.<span class="built_in">read</span>());</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;Front Arm Position: &quot;</span>); Serial.<span class="built_in">println</span>(fArm.<span class="built_in">read</span>());</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;Claw Position: &quot;</span>); Serial.<span class="built_in">println</span>(claw.<span class="built_in">read</span>());</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;++++++++++++++++++++++++++&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">armIniPos</span><span class="params">()</span> </span>&#123; <span class="comment">//初始化舵机位置</span></span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;+Command: Restore Initial Position.&quot;</span>);</span><br><span class="line">    <span class="type">int</span> robotIniPosArray[<span class="number">4</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">        &#123;<span class="string">&#x27;b&#x27;</span>, <span class="number">90</span>, DSD&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;r&#x27;</span>, <span class="number">90</span>, DSD&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;f&#x27;</span>, <span class="number">90</span>, DSD&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;c&#x27;</span>, <span class="number">90</span>, DSD&#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">     <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">         <span class="built_in">servoCmd</span>(robotIniPosArray[i][<span class="number">0</span>],</span><br><span class="line">                  robotIniPosArray[i][<span class="number">1</span>], </span><br><span class="line">                  robotIniPosArray[i][<span class="number">2</span>],</span><br><span class="line">                  robotIniPosArray[i][<span class="number">3</span>]);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>🚗造轮子—智能小夜灯</title>
    <url>/2022/03/09/%E9%80%A0%E8%BD%AE%E5%AD%90%E2%80%94%E6%99%BA%E8%83%BD%E5%B0%8F%E5%A4%9C%E7%81%AF/</url>
    <content><![CDATA[<p>今天练习的程序是实现<code>智能小夜灯</code>的控制，首先，通过<code>太极创客</code>的视频来看看最终的实现结果：🍬</p>
<iframe src="//player.bilibili.com/player.html?aid=52752625&bvid=BV1b441177VF&cid=92305535&page=9" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<blockquote>
<p>本次程序例程来自<a href="http://www.taichi-maker.com/">太极创客官网</a>，此平台的Arduino教程深入浅出，对于想学习Arduino的同学，首推太极创客团队。(๑•̀ㅂ•́)و✧</p>
</blockquote>
<span id="more"></span>

<p>以下便是今天练习的造轮子程序：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *基本功能介绍：</span></span><br><span class="line"><span class="comment"> * 用户可通过传感器控制RGB-LED点亮和关闭</span></span><br><span class="line"><span class="comment"> * 小夜灯配备人体红外感应传感器以及光敏电阻实现照明自动化</span></span><br><span class="line"><span class="comment"> * 点亮和熄灭时产生渐明渐暗效果</span></span><br><span class="line"><span class="comment"> * 点亮时色彩不断变化</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 基本电路连接说明：</span></span><br><span class="line"><span class="comment"> * 共阴极RGB-LED引脚R 连接 Arduino控制器引脚6</span></span><br><span class="line"><span class="comment"> * 共阴极RGB-LED引脚G 连接 Arduino控制器引脚5</span></span><br><span class="line"><span class="comment"> * 共阴极RGB-LED引脚B 连接 Arduino控制器引脚3</span></span><br><span class="line"><span class="comment"> * 红外人体感应模块信号输出引脚 连接 Arduino控制器引脚8</span></span><br><span class="line"><span class="comment"> * 光敏电阻分压电路信号输出引脚 连接 Arduino控制器引脚A0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//宏定义引脚</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rLedPin 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> gLedPin 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bLedPin 3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> irSensorPin 8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> lightSensorPin A0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//led亮度</span></span><br><span class="line"><span class="type">int</span> ledR=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ledG=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> ledB=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> irReading; <span class="comment">//红外人体感应模块输出</span></span><br><span class="line"><span class="type">int</span> lightRedaing; <span class="comment">//光敏电阻分压电路信号输出</span></span><br><span class="line"><span class="type">bool</span> onOffState; <span class="comment">//小夜灯开关状态</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> previousIrMillis; <span class="comment">//上一次检查红外传感器的时间</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> previousLightMillis; <span class="comment">//上一次检查光敏传感器的时间</span></span><br><span class="line"><span class="type">int</span> irCheckInterval=<span class="number">500</span>; <span class="comment">//红外传感器检查时间间隔</span></span><br><span class="line"><span class="type">int</span> irCheckInterval=<span class="number">1000</span>; <span class="comment">//光敏传感器检查时间间隔</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> colorIndex; <span class="comment">//颜色序列号</span></span><br><span class="line"><span class="type">int</span> colorChangeDelay=<span class="number">1</span>; <span class="comment">//颜色改变速度控制变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//设置引脚工作模式</span></span><br><span class="line">    <span class="built_in">pinMode</span>(rLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(gLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(bLedPin,OUTPUT);</span><br><span class="line">    <span class="built_in">pinMode</span>(irSensorPin,INPUT);</span><br><span class="line">    </span><br><span class="line">    Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;Welcome!&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;===System Start Sensor Cheak===&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//读取红外人体感应模块</span></span><br><span class="line">    irReading=<span class="built_in">digitalRead</span>(irSensorPin);</span><br><span class="line">    lightRedaing=<span class="built_in">anologRead</span>(lightSensorPin);</span><br><span class="line">    </span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;===Checking Sensor===&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;irReading&quot;</span>);Serial.<span class="built_in">println</span>(irReading);</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;lightRedaing&quot;</span>);Serial.<span class="built_in">println</span>(lightRedaing);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;======================&quot;</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//六个函数  </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">long</span> currentMillis=<span class="built_in">millis</span>();<span class="comment">//millis()函数可以用来获取Arduino开机后的运行时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">irCheak</span>(currentMillis);<span class="comment">//检查红外传感器时间</span></span><br><span class="line">    <span class="built_in">lightCheak</span>(currentMillis);<span class="comment">//检查光敏电阻时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(irReading==HIGH)&#123;</span><br><span class="line">        irCheckInterval=<span class="number">30000</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        irCheckInterval=<span class="number">500</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(irReading==HIGH&amp;&amp;lightRedaing&gt;=<span class="number">880</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(onOffState==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">fadeOn</span>();</span><br><span class="line">        onOffState=<span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(colorIndex&lt;=<span class="number">1535</span>)&#123;</span><br><span class="line">            colorIndex++；</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(colorIndex&gt;<span class="number">1535</span>)&#123;</span><br><span class="line">            colorIndex=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">ledShowColor</span>(colorIndex)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(onOffState==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">fadeOff</span>();</span><br><span class="line">        onOffState=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">irCheak</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> currentMillis)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(currentMillis-previousIrMillis)&gt;=irCheakInterval)&#123;</span><br><span class="line">        irReading=<span class="built_in">digitalRead</span>(irSensorPin);</span><br><span class="line"></span><br><span class="line">    	Serial.<span class="built_in">println</span>(<span class="string">&quot;===Checking IR Sensor===&quot;</span>);</span><br><span class="line">    	Serial.<span class="built_in">print</span>(<span class="string">&quot;irReading=&quot;</span>);Serial.<span class="built_in">println</span>(irReading);</span><br><span class="line">    	Serial.<span class="built_in">print</span>(<span class="string">&quot;currentMillis&quot;</span>);Serial.<span class="built_in">println</span>(currentMillis);</span><br><span class="line">       	Serial.<span class="built_in">print</span>(<span class="string">&quot;previousIrMillis&quot;</span>);Serial.<span class="built_in">println</span>(previousIrMillis);</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line">        previousIrMillis=currentMillis;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lightCheak</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> currentMillis)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(currentMillis-previousLightMillis)&gt;=lightCheakInterval)&#123;</span><br><span class="line">		lightRedaing=<span class="built_in">anologRead</span>(lightSensorPin);</span><br><span class="line">        </span><br><span class="line">    	Serial.<span class="built_in">println</span>(<span class="string">&quot;===Checking Light Sensor===&quot;</span>);</span><br><span class="line">    	Serial.<span class="built_in">print</span>(<span class="string">&quot;lightReading=&quot;</span>);Serial.<span class="built_in">println</span>(lightRedaing);</span><br><span class="line">    	Serial.<span class="built_in">print</span>(<span class="string">&quot;currentMillis&quot;</span>);Serial.<span class="built_in">println</span>(currentMillis);</span><br><span class="line">        Serial.<span class="built_in">print</span>(<span class="string">&quot;previousLightMillis&quot;</span>);Serial.<span class="built_in">println</span>(previousLightMillis);</span><br><span class="line">        Serial.<span class="built_in">println</span>(<span class="string">&quot;===========================&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        previousLightMillis=currentMillis;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ledShowColor</span><span class="params">(<span class="type">int</span> colorIndex)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(colorIndex&gt;=<span class="number">0</span>&amp;&amp;colorIndex&lt;=<span class="number">255</span>)&#123;</span><br><span class="line">        ledR=<span class="number">255</span>-colorIndex;</span><br><span class="line">        <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(colorIndex&gt;=<span class="number">256</span>&amp;&amp;colorIndex&lt;=<span class="number">511</span>)&#123;</span><br><span class="line">        ledR=colorIndex<span class="number">-256</span>;</span><br><span class="line">        <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(colorIndex&gt;=<span class="number">512</span>&amp;&amp;colorIndex&lt;=<span class="number">767</span>)&#123;</span><br><span class="line">        ledG=<span class="number">767</span>-colorIndex;</span><br><span class="line">        <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(colorIndex&gt;=<span class="number">768</span>&amp;&amp;colorIndex&lt;=<span class="number">1023</span>)&#123;</span><br><span class="line">        ledG=colorIndex<span class="number">-768</span>;</span><br><span class="line">        <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(colorIndex&gt;=<span class="number">1024</span>&amp;&amp;colorIndex&lt;=<span class="number">1279</span>)&#123;</span><br><span class="line">        ledB=<span class="number">1279</span>-colorIndex;</span><br><span class="line">        <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(colorIndex&gt;=<span class="number">1280</span>&amp;&amp;colorIndex&lt;=<span class="number">1535</span>)&#123;</span><br><span class="line">        ledB=colorIndex<span class="number">-1280</span>;</span><br><span class="line">        <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">delay</span>(colorChangeDelay);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fadeOn</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(<span class="string">&quot;Fade On&quot;</span>);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;<span class="number">255</span>)&#123;</span><br><span class="line">        i++;</span><br><span class="line">        ledR++;</span><br><span class="line">        ledG++;</span><br><span class="line">        ledB++;</span><br><span class="line">        <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">        <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">        <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fadeOff</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(ledR&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ledR--;</span><br><span class="line">        <span class="built_in">anologWrite</span>(rLedPin,ledR);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ledG&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ledG--;</span><br><span class="line">        <span class="built_in">anologWrite</span>(gLedPin,ledG);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ledB&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        ledB--;</span><br><span class="line">        <span class="built_in">anologWrite</span>(bLedPin,ledB);</span><br><span class="line">    &#125;    </span><br><span class="line">    colorIndex=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>🎯心得：</p>
<p>变量的声明其实可以更加详细一点，可以使用<code>完整的英文</code>来表示，而不是只使用单词的开头字母。因为在真正写代码的过程中，变量其实大多不是自己拼出来，而是直接复制粘贴，而在此时，准确知道变量的含义并复制来使用尤为重要。所以<code>不要忌讳变量名过长</code>，<code>能快速识别并且能拿来使用是更重要的</code>。</p>
</blockquote>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
</search>
